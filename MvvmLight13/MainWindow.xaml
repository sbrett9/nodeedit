<controls:MetroWindow x:Class="MvvmLight13.MainWindow" 
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                      xmlns:command="http://www.galasoft.ch/mvvmlight" 
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:controls1="clr-namespace:MvvmLight13.Controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                      xmlns:ignore="http://www.galasoft.ch/ignore" 
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                      xmlns:zoom="clr-namespace:MvvmLight13.Zoom" 
                      xmlns:zoomAndPan="clr-namespace:MvvmLight13.ZoomAndPan" 
                      Title="MVVM Light Application" 
                      Width="800" 
                      Height="600" 
                      DataContext="{Binding Main, Source={StaticResource Locator}}" 
                      x:Name="mainWindow" 
                      mc:Ignorable="d ignore">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel x:Name="dockPanel">
        <ScrollViewer x:Name="scrollViewer" CanContentScroll="True" Focusable="False" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
            <AdornerDecorator>
                <Grid Width="{Binding ContentWidth}" Height="{Binding ContentHeight}">
                    <controls1:NodeView x:Name="networkControl" NodesSource="{Binding Path=Network.Nodes}" ConnectionsSource="{Binding Path=Network.Connections}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ConnectionDragStarted">
                                <command:EventToCommand Command="{Binding Path=ConnectionDragStartedCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="QueryConnectionFeedback">
                                <command:EventToCommand Command="{Binding Path=QueryConnectionFeedbackCommand, UpdateSourceTrigger=PropertyChanged}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="ConnectionDragging">
                                <command:EventToCommand Command="{Binding Path=ConnectionDraggingCommand, UpdateSourceTrigger=PropertyChanged}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="ConnectionDragCompleted">
                                <command:EventToCommand Command="{Binding Path=ConnectionDragCompletedCommand, UpdateSourceTrigger=PropertyChanged}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseDown">
                                <command:EventToCommand Command="{Binding Path=MouseDownCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseUp">
                                <command:EventToCommand Command="{Binding Path=MouseUpCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <command:EventToCommand Command="{Binding Path=MouseMoveCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseWheel">
                                <command:EventToCommand Command="{Binding Path=MouseWheelCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </controls1:NodeView>
                </Grid>
            </AdornerDecorator>
        </ScrollViewer>
    </DockPanel>

</controls:MetroWindow>